<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.supermarket.mapper.UserMapper">
    <select id="getUsers" resultMap="UserMapper">
        select * from user where isdelete = 0
        <if test="userName!=null and userName !=''">
            and user_name like '%' #{userName} '%'
        </if>
        <if test="role!=null and role.rid !=null">
            and rid = #{role.rid}
        </if>
    </select>
    <resultMap id="UserMapper" type="com.example.supermarket.entity.User">
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="user_email" property="userEmail"/>
        <result column="isdelete" property="isdelete"/>
        <association property="role" javaType="com.example.supermarket.entity.Role" column="rid"
                     select="getRoleByRid"/>
    </resultMap>
    <select id="getRoleByRid" resultType="com.example.supermarket.entity.Role">
        select * from role where rid=#{rid}
    </select>

    <insert id="addUser">
        insert into user values (null,#{userName},#{userPwd},#{userEmail},#{role.rid},0)
    </insert>
    <select id="getUserByEmail" resultType="com.example.supermarket.entity.User">
        select * from user where user_email=#{userEmail}
    </select>
    <select id="getUserByName" resultType="com.example.supermarket.entity.User">
        select * from user where user_name=#{userName}
    </select>
    <select id="findEmail" resultType="java.lang.Integer">
        select count(*) from user where user_email=#{userEmail}
    </select>
    <select id="findUserName" resultType="java.lang.Integer">
        select count(*) from user where user_name=#{userName}
    </select>

    <update id="updateByUser">
        update user set user_name=#{userName},user_pwd=#{userPwd},
                        user_email=#{userEmail},rid=#{role.rid} where user_id=#{userId}
    </update>

    <update id="deleteByUser">
        update user set isdelete = 1 where user_id = #{userId}
    </update>
    <update id="removeBatchUser">
        update user set isdelete = 1
        <where>
            <foreach collection="userIds" item="userId" open="user_id in(" close=")" separator=",">
                #{userId}
            </foreach>
        </where>
    </update>
</mapper>
